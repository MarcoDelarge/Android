{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "# Cells Analytics Collector\n\n![Certificated](https://img.shields.io/badge/certificated-yes-brightgreen.svg)\n\n[Demo of component in Cells Catalog](https://catalogs.platform.bbva.com/cells)\n\nPieza desarrollada de forma independiente al ciclo de vida de Cells, cuya finalidad es la de escuchar los eventos de tipo: 'window.onerror', 'track-event' (cells), 'template-transition-end' (cells), y enviar la información al proveedor de analíticas utilizado en la aplicación (Adobe Analytics o Google Analytics (WIP)).\n\n## INTERCONEXIÓN CELLS & SISTEMA DE ANALÍTICAS\n\nComponentConnector, de CellsBridge, emite un evento de tipo `'track-event'` cuando una conexión de salida contiene la propiedad `'analytics'`.\n\nLa propiedad `'detail'` del payload del evento contendrá los datos definidos en la propiedad `'analytics'` de la conexión del evento para posteriormente ser procesados por la pieza `'CellsAnalyticsCollector'`.\n\nfragmento de código de cells-bridge (`src/component-connector.js`)\n\n```javascript\nComponentConnector::wrapEvent() {\n  ...\n  if (connection.analytics) {\n    eventManager.emit('track-event', {\n      event: event,\n      detail: connection.analytics\n    });\n  }\n  ...\n}\n```\n\nejemplo de evento con propiedad analytics:\n\n*app/composerMocksTpl/dashboard.js*\n\n```javascript\n{\n  pages: ...,\n  currentPage: {\n    ...\n  },\n  template: {\n    ...\n  },\n  components: [\n    ...\n    {\n      ...\n      properties: {\n        ...\n        cellsConnections: {\n          in: {\n            ...\n          },\n          out: {\n            accounts: {\n              bind: 'accounts-changed',\n              analytics: {\n                ...\n              }\n            }\n          }\n        }\n      }\n    }\n    ...\n  ]\n}\n```\n\n## CELLS ANALYTICS COLLECTOR\n\nPieza desarrollada de forma independiente al ciclo de vida de Cells, cuya finalidad es la de escuchar los eventos de tipo: 'window.onerror', 'track-event' (cells), 'template-transition-end' (cells), y enviar la información al proveedor de analíticas utilizado en la aplicación (Adobe Analytics o Google Analytics (WIP)).\n\n## ESTRUCTURA DEL OBJETO ANALYTICS\n\n```javascript\nanalytics: {\n  action: 'event-to-track',\n  digitalData: {\n    'application.fulfilllmentModel': 'a',\n    'application.step': {\n      bind: '0.name'\n    },\n    'application.type': {\n      bind: '0.name'\n    },\n    'product.primaryCategory': 'd',\n    'product.productSubtype': 'e',\n    'product.productName': 'f',\n    'user.country': {\n      bind: '0.name'\n    }\n  }\n}\n```\n\nLa propiedad `'action'` del objeto `'analytics'`, contiene la acción que será enviada al sistema de tracking de datos (posteriormente será utilizada por los filtros en ADTM). referencia: https://drive.google.com/file/d/0B1LHjxcYuyz1ckJQMThpYTBqM1U/edit\n\nLa propiedad `'digitalData'`, contiene los datos de analíticas que actualizarán los datos definidos para el DataLayer y que serán enviados al sistema de tracking. referencia: https://drive.google.com/file/d/0B1LHjxcYuyz1ckJQMThpYTBqM1U/edit\n\nLa estructura de datos del objeto analytics se corresponde con la estructura de datos del `'DataLayer'` definida por el equipo de Digital Marketing Solutions. referencia: https://drive.google.com/file/d/0B1LHjxcYuyz1ckJQMThpYTBqM1U/edit\n\n__IMPORTANTE: La definición del DataLayer, así como de sus propiedades y los tipos de actions, están basados en el documento previamente mencionado, definidos por parte de Global Digital Marketing Solutions.__\n\n__Es posible redefinir el DataLayer durante la inicialización del colector de analíticas:__ ver sección `'REDEFINICIÓN DATALAYER'`\n\nLos valores de las propiedades definidas dentro del objeto analytics, pueden obtener su valor de:\n\n- Forma estática\n\n```javascript\n'application.type': 'XXXXX'\n```\n\n- Forma dinámica a través de los valores almacenados en el canal de comunicación al que están enlazados (ya sea de forma parcial, total, varios niveles de profundidad de propiedades, elementos, etc...)\n\n\t- \tacceso directo a valor (propiedad):\n\n\t\t```javascript\n\t\t'application.type': {\n\t\t  bind: 'name'\n\t\t},\n\t\t```\n\n\t- \tacceso directo a valor (propiedad), varios niveles de profundidad, primer elemento de array (descriptions):\n\n\t\t```javascript\n\t\t'application.type': {\n\t\t  bind: 'descriptions.0.value'\n\t\t},\n\t\t```\n\n\t- \tacceso a valor (propiedad) del primer elemento del array almacenado en el canal:\n\n\t\t```javascript\n\t\t'application.type': {\n\t\t  bind: '0.name'\n\t\t},\n\t\t```\n\n\t- \tacceso a valor completo almacenado en el canal:\n\n\t\t```javascript\n\t\t'application.type': {\n\t\t  bind: '*'\n\t\t},\n\t\t```\n\n- *(Aplicación Híbrida)* Forma dinámica a través de los datos del dispositivo, haciendo uso de forma interna a través de los métodos definidos en el helper de adobe ADB_Helper, y del plugin de cordova '`adobe-mobile-services`'.\n\n\t- \tIdentificador de usuario del dispositivo (*getUserIdentifier está definido como método de ADB_Helper*):\n\n\t\t```javascript\n\t\t'userIdentifier': {\n        cordova: 'getUserIdentifier'\n      },\n\t\t```\n\n### Ejemplo analíticas tipo 'track' (evento cells: 'track-event', action analytics: 'event-to-track')\n\n*app/composerMocksTpl/dashboard.js*\n\n```javascript\ncellsConnections: {\n  in: {\n    ...\n  },\n  out: {\n    accounts: {\n      bind: 'accounts-changed',\n      analytics: {\n        action: 'event-to-track',\n        digitalData: {\n          'application.fulfilllmentModel': 'a',\n          'application.step': {\n            bind: '0.name'\n          },\n          'application.type': {\n            bind: '0.name'\n          },\n          'product.primaryCategory': 'd',\n          'product.productSubtype': 'e',\n          'product.productName': 'f',\n          'user.country': {\n            bind: '0.name'\n          }\n        }\n      }\n    }\n  }\n}\n```\n\n### Ejemplo analíticas tipo 'footprint' (evento cells: 'template-transition-end', action analytics: 'page-view')\n\n*app/composerMocksTpl/dashboard.js*\n\n```javascript\n{\n  pages: ...,\n  currentPage: {\n    url: '/dashboard',\n    params: '[]'\n  },\n  template: {\n    tag: 'cells-template-static-zones',\n    properties: {\n      disableEdgeSwipe: true,\n      analytics: {\n        action: 'page-view',\n        digitalData: {\n          'page.pageInfo.area': 'public',\n          'page.pageInfo.pageIntent': 'transaction',\n          'page.pageInfo.pageSegment': 'personal',\n          'page.pageInfo.level1': 'accounts',\n          'page.pageInfo.level2': 'make a transfer',\n          'page.pageInfo.level3': 'app complete page'\n        }\n      }\n    }\n  }\n```\n\n## Pasos necesarios para añadir adobe analytics en aplicación Cells\n\n### Recomendaciones\n\nEs recomendable la instalación del plugin para Chrome ['dataslayer'](https://chrome.google.com/webstore/detail/dataslayer/ikbablmmjldhamhcldjjigniffkkjgpo), que nos permite depurar y testear el envío de métricas a Adobe.\n\n### Añadir dependencia al repositorio \"Cells-analytics-collector\":\n\n*bower.json*\n\n```json\n{\n  \"cells-analytics-collector\": \"ssh://git@globaldevtools.bbva.com:7999/CEL/cells-analytics-collector.git\"\n}\n```\n\n### Modificación 'app/config/env.json':\n\n*app/config/env.json original:*\n\n```json\n{\n  \"deployEndpoint\": \"\",\n}\n```\n\n*app/config/env.json actualizado:*\n\n```json\n{\n  \"mainNode\": \"app__content\",\n  \"deployEndpoint\": \"\"\n}\n```\n\n### Modificación 'app/scripts/app.js':\n\n*app/scripts/app.js original:*\n\n```javascript\nnew window.CellsPolymerBridge({\n  mainNode: \"app__content\"\n  ...\n});\n```\n\n*app/scripts/app.js actualizado:*\n\n```javascript\nnew window.CellsPolymerBridge({\n  mainNode: window.AppConfig.mainNode,\n  ...\n});\n```\n\n### Incusión script adobe dtm dentro de 'app/tpls/index.tpl' (justo antes de cierre etiqueta head):\n\n```html\n<script src=\"//assets.adobedtm.com/95bb966a4c61b200a089c37679aaf96e22114787/satelliteLib-c18cf592a41a0f15f50343153f8a1e82673b64e1-staging.js\"></script>\n```\n### Inclusión script 'app-analytics.js' dentro de 'app/scripts'\n\n*app-analytics.js*\n\n```javascript\n(function (document) {\n  'use strict';\n\n  function loadAnalyticsManager(cb) {\n    var script = document.createElement('script');\n\n    script.onload = cb || null;\n    script.src = window.AppConfig.componentsPath + 'cells-analytics-collector/dist/cells-adobe-analytics-collector.min.js';\n    script.async = 1;\n\n    document.head.appendChild(script);\n  }\n\n  function initAnalytics() {\n    var analytics = new window.AdobeAnalyticsCollector({\n      mainNode: window.AppConfig.mainNode\n    });\n  }\n\n  loadAnalyticsManager(initAnalytics);\n}(document));\n```\n\n### Referenciado script 'app-analytics.js' dentro de 'app/tpls/index.tpl'\n\n```html\n<!-- build:js scripts/app-dist.js async -->\n<script src=\"vendor/bowser.min.js\"></script>\n<script src=\"scripts/app-config.js\"></script>\n<script src=\"scripts/app-analytics.js\"></script>\n<script src=\"scripts/app.js\" async></script>\n<!-- endbuild-->\n```\n### INCLUSIÓN DE METADATOS PARA TRACKEO DE ANALÍTICAS / EVENTOS\n\nVer sección anterior.\n\n### REDEFINICIÓN DATALAYER\n\nInicialmente, se ha creado un '`DataLayer`' siguiendo la estructura  definida por el equipo de Digital Marketing Solutions. referencia: https://drive.google.com/file/d/0B1LHjxcYuyz1ckJQMThpYTBqM1U/edit\n\nEs posible que la estructura del '`DataLayer`' no se ajuste a los requisitos de nuestro proyecto, por lo que es posible redefinir el mismo, según nuestras necesidades, en la fase de instanciación del collector:\n\n*app-analytics.js*\n\n```javascript\n(function (document) {\n  'use strict';\n\n  function loadAnalyticsManager(cb) {\n    var script = document.createElement('script');\n\n    script.onload = cb || null;\n    script.src = window.AppConfig.componentsPath + 'cells-analytics-collector/dist/cells-adobe-analytics-collector.min.js';\n    script.async = 1;\n\n    document.head.appendChild(script);\n  }\n\n  function initAnalytics() {\n    var analytics = new window.AdobeAnalyticsCollector({\n      mainNode: window.AppConfig.mainNode,\n      dataLayerName: 'myAnalyticsData',\n      dataLayer: {\n      \tapplication: 'Cells Analytics PoC',\n      \tversion: '0.01',\n      \tuserId: '',\n      \tpage: {\n      \t\tname: '',\n      \t\turl: '',\n      \t\t...\n      \t}\n      }\n    });\n  }\n\n  loadAnalyticsManager(initAnalytics);\n}(document));\n```\n\n*app/composerMocksTpl/dashboard.js*\n\n```javascript\n{\n  pages: ...,\n  currentPage: {\n    url: '/dashboard',\n    params: '[]'\n  },\n  template: {\n    tag: 'cells-template-static-zones',\n    properties: {\n      disableEdgeSwipe: true,\n      analytics: {\n    \taction: 'page-view',\n\t\tmyAnalyticsData: {\n\t\t\t'userId': {\n\t\t\t\tcordova: 'getUserIdentifier'\n\t\t\t},\n          'page.name': 'public',\n          'page.url': 'transaction'\n        }\n      }\n    }\n  }\n```\n\nDe esta forma, *NO* haremos uso de las propiedades definidas por defecto en el DataLayer, ni tampoco de la propiedad definida por defecto donde se almacenan los datos (*myAnalyticsData* en lugar de *digitalData*), y podremos ajustarlo a nuestras necesidades.\n\n### ACTUALIZACIÓN DE LAS PROPIEDADES BASE DEL DATALAYER\n\nEs posible actualizar en tiempo de ejecución el valor base de una propiedad definida en el '`DataLayer`'. Para ello, será necesario almacenar una referencia a la instancia del colector de analíticas:\n\n\n```javascript\nwindow.analyticsCollector = new window.AdobeAnalyticsCollector({\n  ...\n});\n```\n\nPosteriormente, podrémos utilizar el método '`updateDataLayerBaseProperty`', que nos permitirá actualizar el valor de la propiedad base indicada en el primer parámetro.\n\n```javascript\nwindow.analyticsCollector.updateDataLayerBaseProperty('user.profileID', '123456789Z');\n```\n\nEn posteriores actualizaciones y emisiones del '`DataLayer`', el valor de la propiedad 'user.profileID' contendrá el valor de '123456789Z'.",
      "summary": "Cells Analytics Collector",
      "path": "cells-analytics-collector.js",
      "properties": [],
      "methods": [],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 419,
          "column": 0
        },
        "end": {
          "line": 423,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "Polymer.Element",
      "name": "CellsAnalyticsCollector",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "cells-analytics-collector"
    }
  ]
}
